{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ND/fitness-app/fitnesspro/src/components/banner/Banner1.tsx"],"sourcesContent":[" 'use client'\r\nimport React from 'react'\r\nimport CircularProgress from '@mui/joy/CircularProgress';\r\nimport { AiOutlineEye } from 'react-icons/ai'\r\nimport './Banner1.css'\r\n\r\nconst Banner1 = () => {\r\n\r\n  const [data, setData] = React.useState<any>(null)\r\n\r\n  const getData = async () => {\r\n    let temp = [\r\n      {\r\n        \"name\": \"Calories Intake\",\r\n        \"value\": 2000,\r\n        \"unit\": \"kcal\",\r\n        \"goal\": 2500,\r\n        \"goalUnit\": \"kcal\"\r\n      },\r\n      {\r\n        \"name\": \"Sleep\",\r\n        \"value\": 8,\r\n        \"unit\": \"hrs\",\r\n        \"goal\": 8,\r\n        \"goalUnit\": \"hrs\"\r\n      },\r\n      {\r\n        \"name\": \"Steps\",\r\n        \"value\": 50,\r\n        \"unit\": \"steps\",\r\n        \"goal\": 10000,\r\n        \"goalUnit\": \"steps\"\r\n      },\r\n      {\r\n        \"name\": \"Water\",\r\n        \"value\": 2000,\r\n        \"unit\": \"ml\",\r\n        \"goal\": 3000,\r\n        \"goalUnit\": \"ml\"\r\n      },\r\n      {\r\n        \"name\": \"Weight\",\r\n        \"value\": 75,\r\n        \"unit\": \"kg\",\r\n        \"goal\": 70,\r\n        \"goalUnit\": \"kg\"\r\n      },\r\n      {\r\n        \"name\": \"Workout\",\r\n        \"value\": 2,\r\n        \"unit\": \"days\",\r\n        \"goal\": 6,\r\n        \"goalUnit\": \"days\"\r\n      }\r\n    ]\r\n    setData(temp)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  function simplifyFraction(numerator: number, denominator: number): [number, number] {\r\n    function gcd(a: number, b: number): number {\r\n      return b === 0 ? a : gcd(b, a % b);  \r\n    }\r\n\r\n    const commonDivison: number = gcd(numerator, denominator);\r\n      const simplifiedNumerator: number = numerator / commonDivison;\r\n      const simplifiedDenominator: number = denominator / commonDivison\r\n\r\n      return [simplifiedNumerator, simplifiedDenominator];\r\n  }\r\n  return (\r\n    <div className='meters'>\r\n      {\r\n        data?.length >0 && data.map((item: any, index: number) =>{\r\n          return (\r\n            <div className='card' key={index}>\r\n            <div className='card-header'>\r\n              <div className='card-header-box'>\r\n                <div className='card-header-box-name'>{item.name}</div>\r\n                <div className='card-header-box-value'>{item.value} {item.unit}</div>\r\n              </div>\r\n              <div className='card-header-box'>\r\n                <div className='card-header-box-name'>Target</div>\r\n                <div className='card-header-box-value'>{item.goal} {item.goalUnit}</div>\r\n              </div>\r\n            </div>\r\n            <CircularProgress\r\n            color='neutral'\r\n            determinate\r\n            variant='solid'\r\n            size='lg'\r\n            value={\r\n              (item.value / item.goal) * 100\r\n            }\r\n            >\r\n              <span className='textincircle'>\r\n                {simplifyFraction(item.value, item.goal)[0] + '/' + simplifyFraction(item.value, item.goal)[1]}\r\n              </span>\r\n            </CircularProgress>\r\n            <button>Show Report <AiOutlineEye/></button>\r\n          </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner1"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHC;;;;;AAMD,MAAM,UAAU;;IAEd,MAAM,CAAC,MAAM,QAAQ,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAM;IAE5C,MAAM,UAAU;QACd,IAAI,OAAO;YACT;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;YACA;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;YACA;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;YACA;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;YACA;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;YACA;gBACE,QAAQ;gBACR,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,YAAY;YACd;SACD;QACD,QAAQ;IACV;IAEA,6JAAA,CAAA,UAAK,CAAC,SAAS;6BAAC;YACd;QACF;4BAAG,EAAE;IAEL,SAAS,iBAAiB,SAAiB,EAAE,WAAmB;QAC9D,SAAS,IAAI,CAAS,EAAE,CAAS;YAC/B,OAAO,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI;QAClC;QAEA,MAAM,gBAAwB,IAAI,WAAW;QAC3C,MAAM,sBAA8B,YAAY;QAChD,MAAM,wBAAgC,cAAc;QAEpD,OAAO;YAAC;YAAqB;SAAsB;IACvD;IACA,qBACE,6LAAC;QAAI,WAAU;kBAEX,MAAM,SAAQ,KAAK,KAAK,GAAG,CAAC,CAAC,MAAW;YACtC,qBACE,6LAAC;gBAAI,WAAU;;kCACf,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDAAwB,KAAK,IAAI;;;;;;kDAChD,6LAAC;wCAAI,WAAU;;4CAAyB,KAAK,KAAK;4CAAC;4CAAE,KAAK,IAAI;;;;;;;;;;;;;0CAEhE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDAAuB;;;;;;kDACtC,6LAAC;wCAAI,WAAU;;4CAAyB,KAAK,IAAI;4CAAC;4CAAE,KAAK,QAAQ;;;;;;;;;;;;;;;;;;;kCAGrE,6LAAC,uKAAA,CAAA,UAAgB;wBACjB,OAAM;wBACN,WAAW;wBACX,SAAQ;wBACR,MAAK;wBACL,OACE,AAAC,KAAK,KAAK,GAAG,KAAK,IAAI,GAAI;kCAG3B,cAAA,6LAAC;4BAAK,WAAU;sCACb,iBAAiB,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,GAAG,MAAM,iBAAiB,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE;;;;;;;;;;;kCAGlG,6LAAC;;4BAAO;0CAAY,6LAAC,iJAAA,CAAA,eAAY;;;;;;;;;;;;eAxBN;;;;;QA2B/B;;;;;;AAIR;GAvGM;KAAA;uCAyGS","debugId":null}}]
}